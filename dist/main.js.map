{"version":3,"file":"main.js","mappings":"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","sources":["webpack://battleship/./src/modules/ship.js","webpack://battleship/./src/modules/uiController.js","webpack://battleship/./src/modules/gameBoard.js","webpack://battleship/./src/modules/gameController.js","webpack://battleship/./src/modules/player.js","webpack://battleship/./src/index.js","webpack://battleship/./src/modules/gameSetUp.js"],"sourcesContent":["/* eslint-disable no-plusplus */\n\nexport default class Ship {\n  constructor(shipType, shipLength) {\n    this.shipType = shipType;\n    this.shipLength = shipLength;\n    this.hitCount = 0;\n    this.isSunk = false;\n  }\n\n  hit() {\n    if (this.hitCount < this.shipLength) {\n      this.hitCount++;\n\n      if (this.hitCount === this.shipLength) {\n        this.isSunk = true;\n      }\n    }\n  }\n\n  updateSunkStatus() {\n    if (this.hitCount === this.shipLength) {\n      this.isSunk = true;\n    }\n  }\n}\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-plusplus */\n\nimport Ship from \"./ship\";\n\n// Board setup functions\nexport function createBoard(boardId, rows, columns, gameBoard = null) {\n  const boardElement = document.getElementById(boardId);\n  boardElement.innerHTML = \"\";\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      const cell = document.createElement(\"div\");\n      cell.className = \"board-cell\";\n      cell.dataset.row = i;\n      cell.dataset.column = j;\n      if (gameBoard && gameBoard.board[i][j] instanceof Ship) {\n        cell.classList.add(\"player-ship\");\n      }\n      boardElement.appendChild(cell);\n    }\n  }\n}\n\nexport function colorPlayerShips(boardId, playerGameBoard) {\n  for (let i = 0; i < playerGameBoard.rows; i++) {\n    for (let j = 0; j < playerGameBoard.columns; j++) {\n      const cell = document.querySelector(\n        `#${boardId} .board-cell[data-row=\"${i}\"][data-column=\"${j}\"]`,\n      );\n      if (playerGameBoard.board[i][j] instanceof Ship) {\n        cell.classList.add(\"player-ship\");\n      }\n    }\n  }\n}\n\n// Attack handling\nfunction handlePlayerAttack(event, player1, player2, gameController) {\n  const cell = event.target;\n  if (cell.className !== \"board-cell\") return;\n\n  const rowIndex = parseInt(cell.dataset.row, 10);\n  const columnIndex = parseInt(cell.dataset.column, 10);\n\n  const attackResult = player1.sendAttack(\n    rowIndex,\n    columnIndex,\n    player2.gameBoard,\n  );\n  if (attackResult !== false) {\n    updateCellState(cell, player2.gameBoard.board[rowIndex][columnIndex]);\n\n    const winner = gameController.checkWin();\n    if (winner) {\n      endGame(winner, player1.name);\n    } else {\n      gameController.switchPlayer();\n      setTimeout(() => aiMakeAttack(player1, player2, gameController), 300);\n    }\n  }\n}\n\nexport function aiMakeAttack(player1, player2, gameController) {\n  player2.makeRandomAttack(player1.gameBoard);\n  const [rowIndex, colIndex] = player2.getLastAttack();\n\n  const playerBoardId = \"p1-gameboard\";\n  const cell = document.querySelector(\n    `#${playerBoardId} .board-cell[data-row=\"${rowIndex}\"][data-column=\"${colIndex}\"]`,\n  );\n\n  updateCellState(cell, player1.gameBoard.board[rowIndex][colIndex]);\n\n  const winner = gameController.checkWin();\n  if (winner) {\n    endGame(winner, player1.name);\n  } else {\n    gameController.switchPlayer();\n  }\n}\n\n// End Game\nfunction endGame(winnerName, playerName) {\n  const winnerInfoElement = document.querySelector(\".winner-info\");\n  const endGameDialog = document.getElementById(\"game-end-dialog\");\n  const dialogContainer = document.querySelector(\".game-end-dialog-container\");\n\n  winnerInfoElement.textContent =\n    winnerName === playerName ? \"You won!\" : \"You lose\";\n  dialogContainer.style.display = \"flex\";\n  endGameDialog.showModal();\n}\n\n// Utility functions\nfunction updateCellState(cell, cellState) {\n  if (cellState === \"hit\") {\n    cell.classList.add(\"cell-hit\");\n  } else if (cellState === \"miss\") {\n    cell.classList.add(\"cell-miss\");\n  }\n}\n\nexport function setupCellClickHandler(\n  boardId,\n  player1,\n  player2,\n  gameController,\n) {\n  const boardElement = document.getElementById(boardId);\n\n  if (boardId === \"p2-gameboard\") {\n    boardElement.addEventListener(\"click\", (event) =>\n      handlePlayerAttack(event, player1, player2, gameController),\n    );\n  }\n}\n\nexport function setupRestartButtonListener(gameSetup) {\n  const restartButton = document.getElementById(\"restart-button\");\n\n  function restartGameHandler() {\n    const endGameDialog = document.getElementById(\"game-end-dialog\");\n    const dialogContainer = document.querySelector(\n      \".game-end-dialog-container\",\n    );\n\n    dialogContainer.style.display = \"none\";\n\n    endGameDialog.close();\n    gameSetup.initialize();\n  }\n  restartButton.removeEventListener(\"click\", restartGameHandler);\n  restartButton.addEventListener(\"click\", restartGameHandler);\n}\n\n// SHIP PLACEMENT MODAL LOGIC\n\nexport function setupShipPlacementModal(player) {\n  const modal = document.getElementById(\"ship-placement-modal\");\n  const boardElement = document.getElementById(\"placement-gameboard\");\n  let ships;\n  let currentShipIndex = 0;\n  let isHorizontal = true;\n\n  const resetModal = () => {\n    ships = createShips();\n    currentShipIndex = 0;\n    isHorizontal = true;\n    createBoard(\"placement-gameboard\", 10, 10);\n  };\n\n  const handleShipPlacementClick = (event) => {\n    const placed = handleShipPlacement(\n      event,\n      player,\n      ships[currentShipIndex],\n      isHorizontal,\n    );\n    if (placed) {\n      currentShipIndex++;\n      if (currentShipIndex >= ships.length) {\n        modal.close();\n      }\n    }\n  };\n\n  const setupEventListeners = () => {\n    boardElement.removeEventListener(\"mouseover\", handleShipHover);\n    boardElement.removeEventListener(\"mouseout\", handleShipHoverOut);\n    boardElement.removeEventListener(\"click\", handleShipPlacementClick);\n\n    boardElement.addEventListener(\"mouseover\", (event) =>\n      handleShipHover(event, ships[currentShipIndex], isHorizontal),\n    );\n    boardElement.addEventListener(\"mouseout\", handleShipHoverOut);\n    boardElement.addEventListener(\"click\", handleShipPlacementClick);\n    document.getElementById(\"rotate-button\").onclick = () => {\n      isHorizontal = !isHorizontal;\n    };\n  };\n\n  modal.addEventListener(\"close\", () => {\n    colorPlayerShips(\"p1-gameboard\", player.gameBoard);\n    resetModal();\n    setupEventListeners();\n  });\n\n  resetModal();\n  setupEventListeners();\n}\n\nfunction createShips() {\n  return [\n    new Ship(\"Carrier\", 5),\n    new Ship(\"Battleship\", 4),\n    new Ship(\"Destroyer\", 3),\n    new Ship(\"Submarine\", 3),\n    new Ship(\"Patrol Boat\", 2),\n  ];\n}\n\nfunction handleShipHover(event, ship, isHorizontal) {\n  if (event.target.className.includes(\"board-cell\")) {\n    const row = parseInt(event.target.dataset.row, 10);\n    const col = parseInt(event.target.dataset.column, 10);\n    highlightShipPlacement(row, col, ship.shipLength, isHorizontal);\n  }\n}\n\nfunction handleShipHoverOut() {\n  clearShipPlacementHighlight();\n}\n\nfunction handleShipPlacement(event, player, ship, isHorizontal) {\n  const row = parseInt(event.target.dataset.row, 10);\n  const col = parseInt(event.target.dataset.column, 10);\n  if (player.gameBoard.placeShip(ship, row, col, isHorizontal)) {\n    colorPlayerShips(\"placement-gameboard\", player.gameBoard);\n    clearShipPlacementHighlight();\n    return true;\n  }\n  return false;\n}\n\nfunction highlightShipPlacement(row, col, length, isHorizontal) {\n  clearShipPlacementHighlight();\n  for (let i = 0; i < length; i++) {\n    const cell = isHorizontal\n      ? document.querySelector(\n          `#placement-gameboard .board-cell[data-row=\"${row}\"][data-column=\"${\n            col + i\n          }\"]`,\n        )\n      : document.querySelector(\n          `#placement-gameboard .board-cell[data-row=\"${\n            row + i\n          }\"][data-column=\"${col}\"]`,\n        );\n    if (cell) cell.classList.add(\"ship-hover\");\n  }\n}\n\nfunction clearShipPlacementHighlight() {\n  document\n    .querySelectorAll(\"#placement-gameboard .board-cell.ship-hover\")\n    .forEach((cell) => {\n      cell.classList.remove(\"ship-hover\");\n    });\n}\n","/* eslint-disable no-plusplus */\nimport Ship from \"./ship\";\n\nexport default class GameBoard {\n  constructor() {\n    this.rows = 10;\n    this.columns = 10;\n    this.board = this.createBoard();\n  }\n\n  createBoard() {\n    const boardArray = [];\n    for (let i = 0; i < this.rows; i++) {\n      boardArray[i] = [];\n      for (let j = 0; j < this.columns; j++) {\n        boardArray[i][j] = null;\n      }\n    }\n    return boardArray;\n  }\n\n  placeShip(ship, rowIndex, columnIndex, isHorizontal = true) {\n    if (isHorizontal) {\n      let canPlaceHorizontally = true;\n      for (let i = 0; i < ship.shipLength; i++) {\n        if (\n          columnIndex + i >= this.columns ||\n          this.board[rowIndex][columnIndex + i] !== null\n        ) {\n          canPlaceHorizontally = false;\n          break;\n        }\n      }\n\n      if (canPlaceHorizontally) {\n        for (let i = 0; i < ship.shipLength; i++) {\n          this.board[rowIndex][columnIndex + i] = ship;\n        }\n        return true;\n      }\n    }\n\n    if (!isHorizontal) {\n      let canPlaceVertically = true;\n      for (let i = 0; i < ship.shipLength; i++) {\n        if (\n          rowIndex + i >= this.rows ||\n          this.board[rowIndex + i][columnIndex] !== null\n        ) {\n          canPlaceVertically = false;\n          break;\n        }\n      }\n\n      if (canPlaceVertically) {\n        for (let i = 0; i < ship.shipLength; i++) {\n          this.board[rowIndex + i][columnIndex] = ship;\n        }\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getShipCoordinates() {\n    const shipCoordinates = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.board[i][j] instanceof Ship) {\n          shipCoordinates.push({ row: i, col: j });\n        }\n      }\n    }\n    return shipCoordinates;\n  }\n\n  isAttackValid(rowIndex, columnIndex) {\n    return (\n      rowIndex >= 0 &&\n      rowIndex < this.rows &&\n      columnIndex >= 0 &&\n      columnIndex < this.columns\n    );\n  }\n\n  markCellAsAttacked(rowIndex, columnIndex, result) {\n    this.board[rowIndex][columnIndex] = result;\n  }\n\n  receiveAttack(rowIndex, columnIndex) {\n    if (!this.isAttackValid(rowIndex, columnIndex)) {\n      return true;\n    }\n\n    const target = this.board[rowIndex][columnIndex];\n\n    if (target === \"hit\" || target === \"miss\") {\n      return false;\n    }\n\n    if (target instanceof Ship) {\n      target.hit();\n      this.markCellAsAttacked(rowIndex, columnIndex, \"hit\");\n      return true;\n    }\n    this.markCellAsAttacked(rowIndex, columnIndex, \"miss\");\n    return true;\n  }\n\n  areAllShipsSunk() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        const cell = this.board[i][j];\n        if (cell instanceof Ship && !cell.isSunk) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n}\n","import GameBoard from \"./gameBoard\";\nimport Ship from \"./ship\";\n\nexport default class GameController {\n  constructor(player1, player2) {\n    this.player1 = player1;\n    this.player2 = player2;\n    this.currentPlayer = player1;\n  }\n\n  initializeGame() {\n    this.player1.setGameBoard(new GameBoard());\n    this.player2.setGameBoard(new GameBoard());\n    this.placeAiShips();\n  }\n\n  placeAiShips() {\n    const ships = [\n      new Ship(\"Carrier\", 5),\n      new Ship(\"Battleship\", 4),\n      new Ship(\"Destroyer\", 3),\n      new Ship(\"Submarine\", 3),\n      new Ship(\"Patrol Boat\", 2),\n    ];\n    ships.forEach((ship) => {\n      let placed = false;\n      while (!placed) {\n        const row = Math.floor(Math.random() * 10);\n        const col = Math.floor(Math.random() * 10);\n        const isHorizontal = Math.random() > 0.5;\n        placed = this.player2.gameBoard.placeShip(ship, row, col, isHorizontal);\n      }\n    });\n  }\n\n  switchPlayer() {\n    this.currentPlayer =\n      this.currentPlayer === this.player1 ? this.player2 : this.player1;\n  }\n\n  checkWin() {\n    if (this.player1.gameBoard.areAllShipsSunk()) {\n      return this.player2.name;\n    }\n    if (this.player2.gameBoard.areAllShipsSunk()) {\n      return this.player1.name;\n    }\n    return null;\n  }\n}\n","/* eslint-disable max-classes-per-file */\n/* eslint-disable no-plusplus */\n/* eslint-disable class-methods-use-this */\nexport class Player {\n  constructor(name) {\n    this.name = name;\n    this.gameBoard = null;\n  }\n\n  setGameBoard(gameBoard) {\n    this.gameBoard = gameBoard;\n  }\n\n  sendAttack(rowIndex, colIndex, opponentsBoard) {\n    return opponentsBoard.receiveAttack(rowIndex, colIndex);\n  }\n}\n\nexport class AiPlayer extends Player {\n  constructor(name) {\n    super(name);\n    this.attackedCoordinates = Array(10)\n      .fill(null)\n      .map(() => Array(10).fill(false));\n    this.lastAttack = null;\n  }\n\n  makeRandomAttack(opponentsBoard) {\n    let rowIndex;\n    let colIndex;\n    do {\n      rowIndex = Math.floor(Math.random() * 10);\n      colIndex = Math.floor(Math.random() * 10);\n    } while (this.attackedCoordinates[rowIndex][colIndex]);\n\n    this.attackedCoordinates[rowIndex][colIndex] = true;\n    this.lastAttack = [rowIndex, colIndex];\n    return this.sendAttack(rowIndex, colIndex, opponentsBoard);\n  }\n\n  getLastAttack() {\n    return this.lastAttack;\n  }\n}\n","import \"./style.css\";\nimport GameSetup from \"./modules/gameSetUp\";\n\nconst gameSetup = new GameSetup();\ngameSetup.initialize();\n","import {\n  createBoard,\n  setupCellClickHandler,\n  colorPlayerShips,\n  setupRestartButtonListener,\n  setupShipPlacementModal,\n} from \"./uiController\";\nimport GameController from \"./gameController\";\nimport { Player, AiPlayer } from \"./player\";\n\nexport default class GameSetup {\n  constructor() {\n    this.player1 = new Player(\"Human Player\");\n    this.player2 = new AiPlayer(\"Ai Player\");\n    this.gameController = new GameController(this.player1, this.player2);\n  }\n\n  initialize() {\n    this.gameController.initializeGame();\n\n    createBoard(\"p1-gameboard\", 10, 10, this.player1.gameBoard);\n    createBoard(\"p2-gameboard\", 10, 10);\n\n    setupShipPlacementModal(this.player1);\n    const shipPlacementModal = document.getElementById(\"ship-placement-modal\");\n    shipPlacementModal.showModal();\n\n    shipPlacementModal.addEventListener(\"close\", () => {\n      colorPlayerShips(\"p1-gameboard\", this.player1.gameBoard);\n    });\n\n    setupCellClickHandler(\n      \"p2-gameboard\",\n      this.player1,\n      this.player2,\n      this.gameController,\n    );\n    setupRestartButtonListener(this);\n  }\n}\n"],"names":["Ship","constructor","shipType","shipLength","this","hitCount","isSunk","hit","updateSunkStatus","createBoard","boardId","rows","columns","gameBoard","boardElement","document","getElementById","innerHTML","i","j","cell","createElement","className","dataset","row","column","board","classList","add","appendChild","colorPlayerShips","playerGameBoard","querySelector","endGame","winnerName","playerName","winnerInfoElement","endGameDialog","dialogContainer","textContent","style","display","showModal","updateCellState","cellState","handleShipHover","event","ship","isHorizontal","target","includes","col","length","clearShipPlacementHighlight","highlightShipPlacement","parseInt","handleShipHoverOut","querySelectorAll","forEach","remove","GameBoard","boardArray","placeShip","rowIndex","columnIndex","canPlaceHorizontally","canPlaceVertically","getShipCoordinates","shipCoordinates","push","isAttackValid","markCellAsAttacked","result","receiveAttack","areAllShipsSunk","GameController","player1","player2","currentPlayer","initializeGame","setGameBoard","placeAiShips","placed","Math","floor","random","switchPlayer","checkWin","name","Player","sendAttack","colIndex","opponentsBoard","AiPlayer","super","attackedCoordinates","Array","fill","map","lastAttack","makeRandomAttack","getLastAttack","gameController","initialize","player","modal","ships","currentShipIndex","resetModal","handleShipPlacementClick","handleShipPlacement","close","setupEventListeners","removeEventListener","addEventListener","onclick","setupShipPlacementModal","shipPlacementModal","winner","setTimeout","aiMakeAttack","handlePlayerAttack","gameSetup","restartButton","restartGameHandler","setupRestartButtonListener"],"sourceRoot":""}